{"version":3,"file":"static/webpack/static/development/pages/index.js.2edeee3657f338accd64.hot-update.js","sources":["webpack:///./src/content/intro.mdx"],"sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 align='center' style={{\n      marginTop: 0,\n      marginBottom: '180px'\n    }}>\n  Next.js plugin for embedding optimized images\n    </h1>\n    <h2>{`Features`}</h2>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`import`}</strong>{` png/jpg images`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`resize`}</strong>{` to multiple screen sizes and densities`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`modernize`}</strong>{` by converting to webp format`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`optimize`}</strong>{` file sizes using `}<inlineCode parentName=\"li\">{`sharp`}</inlineCode></li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`streamlined usage`}</strong>{` with the built in `}<inlineCode parentName=\"li\">{`<Picture />`}</inlineCode>{` component`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`art direction`}</strong>{` with different images for different breakpoints`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`fast`}</strong>{` deployment and development workflow using persistent cache`}</li>\n    </ul>\n    <p>{`By default `}<strong parentName=\"p\">{`next-img`}</strong>{` is configured to use:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`1 breakpoint at `}<inlineCode parentName=\"li\">{`768px`}</inlineCode></li>\n      <li parentName=\"ul\">{`2 pixel densities of 1x, 2x`}</li>\n      <li parentName=\"ul\">{`to output the original and webp formats`}</li>\n    </ul>\n    <p>{`All of these settings and more can be changed in your `}<inlineCode parentName=\"p\">{`next.config.js`}</inlineCode>{` or in the individual image imports.`}</p>\n    <p>{`Developed and used by `}<a parentName=\"p\" {...{\n        \"href\": \"https://humaans.io/\"\n      }}>{`Humaans`}</a>{`.`}</p>\n    <h2>{`Motivation`}</h2>\n    <p>{`By default Next.js or Webpack doesn't help you much with optimizing images. This means custom configuration or scripting, processing images by hand, using an image CDN or not optimising images at all. `}<strong parentName=\"p\">{`next-img`}</strong>{` provides and alternative streamlined approach for adding images to your Next.js projects. It combines a Next.js plugin, a custom webpack loader and a React component to make serving images in an optimal fashion in a way that is almost as easy as typing `}<inlineCode parentName=\"p\">{`<img src='foo.png' />`}</inlineCode>{`.`}</p>\n    <p>{`In short, it takes the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`<Picture src={require('./images/jelly.jpg?sizes=375,800')} />\n`}</code></pre>\n    <p>{`Imports, resizes, optimizes, caches (persistently in the git repo) and outputs the following HTML:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<picture>\n  <source\n    type=\"image/webp\"\n    srcset=\"\n      /_next/static/images/jelly-375@1x-5e609945b16eba99bf2aaa3007d3ba92.webp  375w,\n      /_next/static/images/jelly-375@2x-850e7fd87fceda1e7cefcb628a07f5c4.webp  750w,\n      /_next/static/images/jelly-800@1x-1481a104c8ce38822aeafdbe97a17e69.webp  800w,\n      /_next/static/images/jelly-800@2x-fc18765bd3b819714ca2da58e10907c9.webp 1600w\n    \"\n    sizes=\"(max-width: 768px) 375px, 800px\"\n  />\n  <source\n    type=\"image/jpeg\"\n    srcset=\"\n      /_next/static/images/jelly-375@1x-259e4b1f32b3bdd4349806c4a5763a54.jpg  375w,\n      /_next/static/images/jelly-375@2x-295d4cc8111d4e911dbc9ad4dd1d8322.jpg  750w,\n      /_next/static/images/jelly-800@1x-090d866969aba9b237e71ee52512a7c4.jpg  800w,\n      /_next/static/images/jelly-800@2x-33f1639cadf8c4c5f19eb5c19e20a67d.jpg 1600w\n    \"\n    sizes=\"(max-width: 768px) 375px, 800px\"\n  />\n\n  <img\n    src=\"/_next/static/images/jelly-375@1x-259e4b1f32b3bdd4349806c4a5763a54.jpg\"\n    srcset=\"\n      /_next/static/images/jelly-375@1x-259e4b1f32b3bdd4349806c4a5763a54.jpg  375w,\n      /_next/static/images/jelly-375@2x-295d4cc8111d4e911dbc9ad4dd1d8322.jpg  750w,\n      /_next/static/images/jelly-800@1x-090d866969aba9b237e71ee52512a7c4.jpg  800w,\n      /_next/static/images/jelly-800@2x-33f1639cadf8c4c5f19eb5c19e20a67d.jpg 1600w\n    \"\n  />\n</picture>\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"mappings":";;;;;;;;;;;;;;;;;;;;;AACA;AACA;AAEA;AACA;AAEA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AACA;AAIA;AAGA;AACA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoCA;AAEA;AACA;;;;A","sourceRoot":""}