{"version":3,"file":"static/webpack/static/development/pages/index.js.17fa64525319a3401945.hot-update.js","sources":["webpack:///./src/content/intro.mdx"],"sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 align='center' style={{\n      marginTop: 0,\n      marginBottom: '180px'\n    }}>\n  Next.js plugin for embedding optimized images\n    </h1>\n    <h2>{`Features`}</h2>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`import`}</strong>{` png/jpg images`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`resize`}</strong>{` to multiple screen sizes and densities`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`modernize`}</strong>{` by converting to webp format`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`optimize`}</strong>{` file sizes using `}<inlineCode parentName=\"li\">{`sharp`}</inlineCode></li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`streamlined usage`}</strong>{` with the built in `}<inlineCode parentName=\"li\">{`<Picture />`}</inlineCode>{` component`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`art direction`}</strong>{` with different images for different breakpoints`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`fast`}</strong>{` deployment and development workflow using persistent cache`}</li>\n    </ul>\n    <p>{`By default `}<strong parentName=\"p\">{`next-img`}</strong>{` is configured to use:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`1 breakpoint at `}<inlineCode parentName=\"li\">{`768px`}</inlineCode></li>\n      <li parentName=\"ul\">{`2 pixel densities of 1x, 2x`}</li>\n      <li parentName=\"ul\">{`to output the original and webp formats`}</li>\n    </ul>\n    <p>{`All of these settings and more can be changed in your `}<inlineCode parentName=\"p\">{`next.config.js`}</inlineCode>{` or in the individual image imports.`}</p>\n    <p>{`Developed and used by `}<a parentName=\"p\" {...{\n        \"href\": \"https://humaans.io/\"\n      }}>{`Humaans`}</a>{`.`}</p>\n    <h2>{`Motivation`}</h2>\n    <p>{`By default Next.js or Webpack doesn't help you much with optimizing images. This means custom configuration or scripting, processing images by hand, using an image CDN or not optimising images at all. `}<strong parentName=\"p\">{`next-img`}</strong>{` provides and alternative streamlined approach for adding images to your Next.js projects. It combines a Next.js plugin, a custom webpack loader and a React component to make serving images in an optimal fashion in a way that is almost as easy as typing `}<inlineCode parentName=\"p\">{`<img src='foo.png' />`}</inlineCode>{`.`}</p>\n    <p>{`In short, it takes the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`<Picture src={require('./images/jelly.jpg?sizes=375,800')} />\n`}</code></pre>\n    <p>{`Imports, resizes, optimizes, caches (persistently in the git repo) and outputs the following HTML:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<picture>\n  <source\n    type=\"image/webp\"\n    srcset=\"\n      /_next/static/images/jelly-375@1x-5e609945b16eba99bf2aaa3007d3ba92.webp  375w,\n      /_next/static/images/jelly-375@2x-850e7fd87fceda1e7cefcb628a07f5c4.webp  750w,\n      /_next/static/images/jelly-800@1x-1481a104c8ce38822aeafdbe97a17e69.webp  800w,\n      /_next/static/images/jelly-800@2x-fc18765bd3b819714ca2da58e10907c9.webp 1600w\n    \"\n    sizes=\"(max-width: 768px) 375px, 800px\"\n  />\n  <source\n    type=\"image/jpeg\"\n    srcset=\"\n      /_next/static/images/jelly-375@1x-259e4b1f32b3bdd4349806c4a5763a54.jpg  375w,\n      /_next/static/images/jelly-375@2x-295d4cc8111d4e911dbc9ad4dd1d8322.jpg  750w,\n      /_next/static/images/jelly-800@1x-090d866969aba9b237e71ee52512a7c4.jpg  800w,\n      /_next/static/images/jelly-800@2x-33f1639cadf8c4c5f19eb5c19e20a67d.jpg 1600w\n    \"\n    sizes=\"(max-width: 768px) 375px, 800px\"\n  />\n\n  <img\n    src=\"/_next/static/images/jelly-375@1x-259e4b1f32b3bdd4349806c4a5763a54.jpg\"\n    srcset=\"\n      /_next/static/images/jelly-375@1x-259e4b1f32b3bdd4349806c4a5763a54.jpg  375w,\n      /_next/static/images/jelly-375@2x-295d4cc8111d4e911dbc9ad4dd1d8322.jpg  750w,\n      /_next/static/images/jelly-800@1x-090d866969aba9b237e71ee52512a7c4.jpg  800w,\n      /_next/static/images/jelly-800@2x-33f1639cadf8c4c5f19eb5c19e20a67d.jpg 1600w\n    \"\n  />\n</picture>\n`}</code></pre>\n    <h2>{`Usage`}</h2>\n    <p>{`Install the package`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`npm install next-img\n`}</code></pre>\n    <p>{`Add the plugin to your `}<inlineCode parentName=\"p\">{`next.config.js`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const withPlugins = require('next-compose-plugins')\nconst nextImg = require('next-img/plugin')\n\nmodule.exports = withPlugins([\n  nextImg,\n  {\n    // specify the default breakpoints\n    breakpoints: [768],\n  },\n])\n`}</code></pre>\n    <p>{`In your application, import the images and embed using the `}<inlineCode parentName=\"p\">{`<Picture />`}</inlineCode>{` component:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { Picture } from 'next-img'\nimport jelly from './images/jelly.jpg?sizes=375,800'\n\nexport default () => <Picture src={jelly} />\n`}</code></pre>\n    <p>{`Or inline:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { Picture } from 'next-img'\n\nexport default () => <Picture src={require('./images/jelly.jpg?sizes=375,800')} />\n`}</code></pre>\n    <p>{`This particular example will generate the following images:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`375px wide image to show on small screens with low pixel density of 1x`}</li>\n      <li parentName=\"ul\">{`750px wide image to show on small screens with high pixel density of 2x or more`}</li>\n      <li parentName=\"ul\">{`800px wide image to show on large screens with low pixel density of 1x`}</li>\n      <li parentName=\"ul\">{`1600px wide image to show on large screens with high pixel density of 2x or more`}</li>\n    </ul>\n    <p>{`The resized and optimized images will be saved to the `}<inlineCode parentName=\"p\">{`resources`}</inlineCode>{` directory in the root of your project during the development. This means, that if you tweak the image import parameters or plugin configuration, you might generate extra images that are no longer used by your project. In that case execute `}<inlineCode parentName=\"p\">{`next-img`}</inlineCode>{` command to remove any unnecessary images and build any missing ones:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`npx next-img\n`}</code></pre>\n    <p>{`Now check in the `}<inlineCode parentName=\"p\">{`resources`}</inlineCode>{` directory to your source control to be reused later for development and production builds. You can turn this feature off by setting `}<inlineCode parentName=\"p\">{`persistentCache: false`}</inlineCode>{` in the plugin configuration, in which case the images will be only stored in a temporary cache inside `}<inlineCode parentName=\"p\">{`.next`}</inlineCode>{` directory.`}</p>\n    <p>{`See the `}<a parentName=\"p\" {...{\n        \"href\": \"https://humaans.github.io/next-img/\"\n      }}>{`documentation`}</a>{` website for a comprehensive list of examples.`}</p>\n    <h2>{`Configuration`}</h2>\n    <p>{`Default plugin configuration options:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`{\n  breakpoints: [768],\n  densities: ['1x', '2x'],\n\n  // the directory within Next.js build output\n  imagesDir: 'images',\n  // the output image name template\n  imagesName: '[name]-[size]@[density]-[hash].[ext]',\n  // advanced - customise the image public path\n  imagesPublicPath: null,\n  // advanced - customise the image output path\n  imagesOutputPath: null,\n\n  // persistent cache allows for fast deploy and\n  // development workflow by avoiding reprocessing\n  // images that were previously processed\n  persistentCache: true,\n  persistentCacheDir: 'resources',\n\n  // this directory within .next is used in case persistent cache is turned off\n  cacheDir: path.join('cache', 'next-img'),\n\n  // image quality configuration\n  jpeg: {\n    quality: 80,\n    webp: {\n      quality: 80,\n      reductionEffort: 6,\n    },\n  },\n\n  png: {\n    quality: 100,\n    webp: {\n      quality: 80,\n      reductionEffort: 6,\n      lossles: true,\n    },\n  },\n}\n`}</code></pre>\n    <h2>{`Import Params`}</h2>\n    <p>{`When importing an image, you can use query parameters to customise the optimisation:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`sizes`}</strong>{` - a list of comma separated sizes you will be showing images at. Note that you do not need to take into account the pixel densities here. That is, if you're showing an image at `}<inlineCode parentName=\"li\">{`320px`}</inlineCode>{` wide on your website, simply specify `}<inlineCode parentName=\"li\">{`320`}</inlineCode>{` here, the plugin will produce any necessary larger versions based on the `}<inlineCode parentName=\"li\">{`densities`}</inlineCode>{` configuration.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`densities`}</strong>{` - a list of comma separated densities you need each image size to be produced at. By default `}<inlineCode parentName=\"li\">{`1x`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`2x`}</inlineCode>{` sizes of images will be produced, specify `}<inlineCode parentName=\"li\">{`1x`}</inlineCode>{` if you want to produce only one image per size, or `}<inlineCode parentName=\"li\">{`1x,2x,3x`}</inlineCode>{`, etc. if you want more densities.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`jpeg / png / webp`}</strong>{` - quality configuration options for the output image. Refer to `}<a parentName=\"li\" {...{\n          \"href\": \"https://sharp.pixelplumbing.com/api-output\"\n        }}>{`sharp documentation`}</a>{` to find the available options for each output format.`}</li>\n    </ul>\n    <p>{`Examples:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import img1 from './images/img.jpg'\nimport img2 from './images/img.jpg?sizes=375,900'\nimport img3 from './images/img.jpg?sizes=375,900&densities=1x'\nimport img4 from './images/img.jpg?sizes=375,900&densities=1x,2x,3x'\nimport img5 from './images/img.jpg?sizes=375,900&densities=1x,2x,3x&jpeg[quality]=70&webp[quality]=70'\n`}</code></pre>\n    <h2>{`Picture Props`}</h2>\n    <p><inlineCode parentName=\"p\">{`next-img`}</inlineCode>{` comes with a React component making embedding images easier.`}</p>\n    <p>{`Here are the props this component access:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`src`}</strong>{` the imported image, or an array of imported images.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`breakpoints`}</strong>{` - a list of breakpoints to override the global configuration.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`sizes`}</strong>{` - a custom `}<a parentName=\"li\" {...{\n          \"href\": \"https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images#How_do_you_create_responsive_images\"\n        }}>{`html sizes attribute`}</a>{`, by default the sizes attribute is generated based on the available images and breakpoints.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`the rest of the props and ref`}</strong>{` are forwarded to the `}<inlineCode parentName=\"li\">{`img`}</inlineCode>{` tag. This allows the use of attributes such as `}<inlineCode parentName=\"li\">{`alt`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`loading=\"lazy\"`}</inlineCode>{`, etc..`}</li>\n    </ul>\n    <h4>{`A note how sizes/media attributes are generated`}</h4>\n    <p>{`When a single image is provided via the `}<inlineCode parentName=\"p\">{`src`}</inlineCode>{` prop, then each size will be configured to show up per each breakpoint available using the html `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images#How_do_you_create_responsive_images\"\n      }}><inlineCode parentName=\"a\">{`sizes attribute`}</inlineCode></a>{` attribute.`}</p>\n    <p>{`For example, with breakpoints `}<inlineCode parentName=\"p\">{`[375, 768]`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`?sizes=100,400,800`}</inlineCode>{` the `}<inlineCode parentName=\"p\">{`<Picture>`}</inlineCode>{` component will apply the following `}<inlineCode parentName=\"p\">{`sizes`}</inlineCode>{` attribute:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`(max-width: 375px) 100px,\n(max-width: 768px) 400px,\n                   800px\n`}</code></pre>\n    <p>{`When an array of images is provided via the `}<inlineCode parentName=\"p\">{`src`}</inlineCode>{` prop, then each image will be configured to show up per each breakpoint available using the html `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images#Art_direction\"\n      }}><inlineCode parentName=\"a\">{`media attribute`}</inlineCode></a>{`.`}</p>\n    <p>{`For example, with breakpoints `}<inlineCode parentName=\"p\">{`[375, 768]`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`src=[img1, img2, img3]`}</inlineCode>{` the `}<inlineCode parentName=\"p\">{`<Picture>`}</inlineCode>{` component will apply the following `}<inlineCode parentName=\"p\">{`media`}</inlineCode>{` attribute:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<picture>\n  <source media=\"(max-width: 480px)\" sizes=\"{{img1 width}}\" />\n  <source media=\"(max-width: 768px)\" sizes=\"{{img2 width}}\" />\n  <source sizes=\"{{img3 width}}\" />\n  <img ... />\n</picture>\n`}</code></pre>\n    <p>{`See the `}<a parentName=\"p\" {...{\n        \"href\": \"\"\n      }}>{`demo`}</a>{` website for a comprehensive list of examples.`}</p>\n    <h2>{`FAQ`}</h2>\n    <p><strong parentName=\"p\">{`Do I have to use the `}<inlineCode parentName=\"strong\">{`<Picture />`}</inlineCode>{` component?`}</strong>{`\nIt is indeed optional. You can handle the imported image object however you want.`}</p>\n    <p><strong parentName=\"p\">{`Will you support `}<inlineCode parentName=\"strong\">{`gif`}</inlineCode>{` images?`}</strong>{`\nThat could potentially be added in the future, let use know if you're interested.`}</p>\n    <h2>{`Development`}</h2>\n    <p>{`To develop this project, you'll need to run a watcher for the `}<inlineCode parentName=\"p\">{`<Picture />`}</inlineCode>{` component:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`npm install\nnpm run watch\n`}</code></pre>\n    <p>{`You can use example as the playground:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`cd example\nnpm install\nnext\n`}</code></pre>\n    <p>{`To execute the `}<inlineCode parentName=\"p\">{`next-img`}</inlineCode>{` command in the example dir:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`node ../bin/next-img\n`}</code></pre>\n    <h2>{`Future`}</h2>\n    <p>{`Short term roadmap:`}</p>\n    <h4>{`V1:`}</h4>\n    <ul {...{\n      \"className\": \"contains-task-list\"\n    }}>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": true,\n          \"disabled\": true\n        }}></input>{` `}{`Allow different config for `}<inlineCode parentName=\"li\">{`jpg->webp`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`png->webp`}</inlineCode>{` conversions`}</li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": false,\n          \"disabled\": true\n        }}></input>{` `}{`Allow turning `}<inlineCode parentName=\"li\">{`webp/jpg/png`}</inlineCode>{` output off`}</li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": false,\n          \"disabled\": true\n        }}></input>{` `}{`Add `}<inlineCode parentName=\"li\">{`?raw`}</inlineCode>{` query support that doesn’t process the image in any way`}</li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": false,\n          \"disabled\": true\n        }}></input>{` `}{`Remove the need for `}<inlineCode parentName=\"li\">{`next-img`}</inlineCode>{` command by plugging directly into `}<inlineCode parentName=\"li\">{`next build`}</inlineCode>{` via webpack plugin`}</li>\n    </ul>\n    <h4>{`V2:`}</h4>\n    <ul {...{\n      \"className\": \"contains-task-list\"\n    }}>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": false,\n          \"disabled\": true\n        }}></input>{` `}{`Add support for css images, in addition to the html images`}</li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": false,\n          \"disabled\": true\n        }}></input>{` `}{`Inline small images`}</li>\n    </ul>\n    <p>{`And some ideas for where this project could be taken in the future:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Allow adding `}<inlineCode parentName=\"li\">{`imagemin`}</inlineCode>{` optimisation plugins into the pipeline via config. This way users can control how to optimise their images more granuarly.`}</li>\n      <li parentName=\"ul\">{`Translate relative sizes `}<inlineCode parentName=\"li\">{`?sizes=100vw,50vw,900px`}</inlineCode>{` to pixels based on the breakpoint configuration, this would allow dynamic kind of imports that depend on your design system and relative sizing of images, e.g. if css says \"50vw\", you will not need to do that calculation manually.`}</li>\n      <li parentName=\"ul\">{`Debug mode that prints image sizes into images themselves, so you can see what's shown when right in the browser inside images (or overlaying them using js at runtime).`}</li>\n      <li parentName=\"ul\">{`Babel parser that analyses code for images to avoid the need to `}<inlineCode parentName=\"li\">{`require()`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`Optimize file read/write/hash operations to the maximum for improved performance.`}</li>\n      <li parentName=\"ul\">{`A puppeteer script to render the website in all predefined breakpoints and automatically analyses all image sizes required.`}</li>\n      <li parentName=\"ul\">{`Add support for gif and webp as source images.`}</li>\n    </ul>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"mappings":";;;;;;;;;;;;;;;;;;;;;AACA;AACA;AAEA;AACA;AAEA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AACA;AAIA;AAGA;AACA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAasourceRoot":""}