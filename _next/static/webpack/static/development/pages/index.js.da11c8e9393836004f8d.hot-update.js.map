{"version":3,"file":"static/webpack/static/development/pages/index.js.da11c8e9393836004f8d.hot-update.js","sources":["webpack:///./src/images/coffee6.jpg","webpack:///./src/pages/index.js"],"sourcesContent":["module.exports = {\"src\":\"/_next/static/images/coffee6-375@1x-13245d74c5ffc930e759e13afe76d34e.jpg\",\"type\":\"image/jpeg\",\"srcSet\":\"/_next/static/images/coffee6-375@1x-13245d74c5ffc930e759e13afe76d34e.jpg 375w, /_next/static/images/coffee6-375@2x-14f9253f275dfcd6db7b8f10a6a9827a.jpg 750w, /_next/static/images/coffee6-860@1x-3d42e7fa55caa029cbdb6e26975338d8.jpg 860w, /_next/static/images/coffee6-860@2x-b95f22936fd12293e8e997ecc483a915.jpg 1720w\",\"webpSrcSet\":\"/_next/static/images/coffee6-375@1x-de84522b91cb57a11930712b59daf687.webp 375w, /_next/static/images/coffee6-375@2x-8cb174e9e63ad24aeac82fc270e653eb.webp 750w, /_next/static/images/coffee6-860@1x-6941bb546b151875f65d5a2016f7e1b5.webp 860w, /_next/static/images/coffee6-860@2x-84cce9a6118a742cd987fceef29032c7.webp 1720w\",\"images\":[{\"path\":\"/_next/static/images/coffee6-375@1x-13245d74c5ffc930e759e13afe76d34e.jpg\",\"size\":375,\"density\":1,\"width\":375,\"height\":252,\"format\":\"jpeg\"},{\"path\":\"/_next/static/images/coffee6-375@1x-de84522b91cb57a11930712b59daf687.webp\",\"size\":375,\"density\":1,\"width\":375,\"height\":252,\"format\":\"webp\"},{\"path\":\"/_next/static/images/coffee6-375@2x-14f9253f275dfcd6db7b8f10a6a9827a.jpg\",\"size\":375,\"density\":2,\"width\":750,\"height\":504,\"format\":\"jpeg\"},{\"path\":\"/_next/static/images/coffee6-375@2x-8cb174e9e63ad24aeac82fc270e653eb.webp\",\"size\":375,\"density\":2,\"width\":750,\"height\":504,\"format\":\"webp\"},{\"path\":\"/_next/static/images/coffee6-860@1x-3d42e7fa55caa029cbdb6e26975338d8.jpg\",\"size\":860,\"density\":1,\"width\":860,\"height\":578,\"format\":\"jpeg\"},{\"path\":\"/_next/static/images/coffee6-860@1x-6941bb546b151875f65d5a2016f7e1b5.webp\",\"size\":860,\"density\":1,\"width\":860,\"height\":578,\"format\":\"webp\"},{\"path\":\"/_next/static/images/coffee6-860@2x-b95f22936fd12293e8e997ecc483a915.jpg\",\"size\":860,\"density\":2,\"width\":1720,\"height\":1156,\"format\":\"jpeg\"},{\"path\":\"/_next/static/images/coffee6-860@2x-84cce9a6118a742cd987fceef29032c7.webp\",\"size\":860,\"density\":2,\"width\":1720,\"height\":1156,\"format\":\"webp\"}],\"name\":\"coffee6.jpg\",\"sizes\":[375,860],\"breakpoints\":[768]}","import React from 'react'\nimport { Picture } from 'next-img'\nimport { Layout } from '../components/Layout'\nimport { toString } from '../helpers/toString'\nimport Code from 'react-syntax-highlighter'\nimport syntax from 'react-syntax-highlighter/dist/cjs/styles/hljs/railscasts'\n\nexport default () => (\n  <Layout>\n    <div className='example'>\n      <div className='example-inner'>\n        <ol className='toc'>\n          <li>\n            <a href='#example-1'>One size per breakpoint</a>\n          </li>\n          <li>\n            <a href='#example-2'>Override breakpoints</a>\n          </li>\n          <li>\n            <a href='#example-3'>Custom sizes prop</a>\n          </li>\n          <li>\n            <a href='#example-4'>Single image</a>\n          </li>\n          <li>\n            <a href='#example-5'>Art direction</a>\n          </li>\n          <li>\n            <a href='#example-6'>PNG images</a>\n          </li>\n          <li>\n            <a href='#example-7'>Other query params and props</a>\n          </li>\n        </ol>\n      </div>\n    </div>\n\n    <div className='example example-1' id='example-1'>\n      <div className='example-inner'>\n        <h1>Example 1</h1>\n        <h2>One size per breakpoint</h2>\n        <p>\n          The most typical usage. Provide one image per each device size you're targeting. For example, if you're\n          targeting small/large at 768px breakpoint (as configured in your <code>next.config.js</code>), provide 2\n          sizes. If you're targeting mobile/tablet/desktop with breakpoints 480px and 768px (as configured in your{' '}\n          <code>next.config.js</code>) - provide 3 sizes, and so on.\n        </p>\n\n        <Code language='html' style={syntax}>\n          {`<Picture src={require('../images/coffee1.jpg?sizes=375,860')} />`}\n        </Code>\n        <h3>Output</h3>\n        <Code language='html' style={syntax}>\n          {toString(<Picture src={require('../images/coffee1.jpg?sizes=375,860')} />)}\n        </Code>\n        <div className='photo'>\n          <div className='photo-inner'>\n            <Picture src={require('../images/coffee1.jpg?sizes=375,860')} />\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div className='example example-2' id='example-2'>\n      <div className='example-inner'>\n        <h1>Example 2</h1>\n        <h2>Override breakpoints</h2>\n        <p>\n          You can specify a different set of breakpoints for an individual image. Let's say your preconfigured\n          breakpoints are <code>[768]</code>, but for some image you want to use 3 sizes at breakpoints{' '}\n          <code>[768, 1080]</code>.\n        </p>\n\n        <Code language='html' style={syntax}>\n          {`<Picture\n  src={require('../images/coffee2.jpg?sizes=375,600,860')}\n  breakpoints={[768,1080]}\n/>`}\n        </Code>\n        <h3>Output</h3>\n        <Code language='html' style={syntax}>\n          {toString(<Picture src={require('../images/coffee2.jpg?sizes=375,600,860')} breakpoints={[768, 1080]} />)}\n        </Code>\n        <div className='photo'>\n          <div className='photo-inner'>\n            <Picture src={require('../images/coffee2.jpg?sizes=375,600,860')} breakpoints={[768, 1080]} />\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div className='example example-3' id='example-3'>\n      <div className='example-inner'>\n        <h1>Example 3</h1>\n        <h2>Custom sizes prop</h2>\n        <p>\n          Use the{' '}\n          <a\n            href='https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images#Resolution_switching_Different_sizes'\n            target='blank_'\n          >\n            sizes\n          </a>{' '}\n          prop in order to get full control over specifying which image should be used at what breakpoint. This way you\n          can specify any number of image sizes and choose to show them at any breakpoint.\n        </p>\n\n        <Code language='html' style={syntax}>\n          {`<Picture\n  src={require('../images/coffee3.jpg?sizes=375,600,860')}\n  sizes='(max-width: 768px) 100vw, (max-width: 1180px) 600px, 860px'\n/>`}\n        </Code>\n        <h3>Output</h3>\n        <Code language='html' style={syntax}>\n          {toString(\n            <Picture\n              src={require('../images/coffee3.jpg?sizes=375,600,860')}\n              sizes='(max-width: 768px) 100vw, (max-width: 1180px) 600px, 860px'\n            />,\n          )}\n        </Code>\n        <div className='photo'>\n          <div className='photo-inner'>\n            <Picture\n              src={require('../images/coffee3.jpg?sizes=375,600,860')}\n              sizes='(max-width: 768px) 100vw, (max-width: 1180px) 600px, 860px'\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div className='example example-4' id='example-4'>\n      <div className='example-inner'>\n        <h1>Example 4</h1>\n        <h2>Single image</h2>\n        <p>\n          You can leave out the <code>sizes</code> query param altogether. That will load the original image size across\n          any device width. Note, this still outputs an image per screen density and shows the appropriate one based on\n          the device.\n        </p>\n\n        <Code language='html' style={syntax}>\n          {`<Picture src={require('../images/coffee4.jpg')} />`}\n        </Code>\n        <h3>Output</h3>\n        <Code language='html' style={syntax}>\n          {toString(<Picture src={require('../images/coffee4.jpg')} />)}\n        </Code>\n        <div className='photo'>\n          <div className='photo-inner'>\n            <Picture src={require('../images/coffee4.jpg')} />\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div className='example example-5' id='example-5'>\n      <div className='example-inner'>\n        <h1>Example 5</h1>\n        <h2>Art direction</h2>\n        <p>\n          You can pass an array of images to the src. This way you can show an entirely different image at each\n          breakpoint. This changes the html output to switch between the images using the html{' '}\n          <a\n            href='https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images#Art_direction'\n            target='blank_'\n          >\n            media attribute\n          </a>\n          . Note, you can take this even further by specifying multiple sizes for each image and using the{' '}\n          <a\n            href='https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images#Resolution_switching_Different_sizes'\n            target='blank_'\n          >\n            sizes prop\n          </a>\n          to specify what should be shown when.\n        </p>\n\n        <Code language='html' style={syntax}>\n          {`<Picture\n  src={[\n    require('../images/coffee5-s.jpg?sizes=375'),\n    require('../images/coffee5-m.jpg?sizes=600'),\n    require('../images/coffee5-l.jpg?sizes=860'),\n  ]}\n  breakpoints={[768, 1180]}\n/>`}\n        </Code>\n        <h3>Output</h3>\n        <Code language='html' style={syntax}>\n          {toString(\n            <Picture\n              src={[\n                require('../images/coffee5-s.jpg?sizes=375'),\n                require('../images/coffee5-m.jpg?sizes=600'),\n                require('../images/coffee5-l.jpg?sizes=860'),\n              ]}\n              breakpoints={[768, 1180]}\n            />,\n          )}\n        </Code>\n        <div className='photo'>\n          <div className='photo-inner'>\n            <Picture\n              src={[\n                require('../images/coffee5-s.jpg?sizes=375'),\n                require('../images/coffee5-m.jpg?sizes=600'),\n                require('../images/coffee5-l.jpg?sizes=860'),\n              ]}\n              breakpoints={[768, 1180]}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div className='example example-6' id='example-6'>\n      <div className='example-inner'>\n        <h1>Example 6</h1>\n        <h2>PNG images</h2>\n        <p>PNG images are supported as well. In this case, a lossless webp is outputted by default.</p>\n\n        <Code language='html' style={syntax}>\n          {`<Picture src={require('../images/illustration.png?sizes=480,860')} />`}\n        </Code>\n        <h3>Output</h3>\n        <Code language='html' style={syntax}>\n          {toString(<Picture src={require('../images/illustration.png?sizes=480,860')} />)}\n        </Code>\n        <div className='photo'>\n          <div className='photo-inner'>\n            <Picture src={require('../images/illustration.png?sizes=480,860')} />\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div className='example example-7' id='example-7'>\n      <div className='example-inner'>\n        <h1>Example 7</h1>\n        <h2>Other query params and props</h2>\n        <p>PNG images are supported as well. In this case, a lossless webp is outputted by default.</p>\n\n        <Code language='html' style={syntax}>\n          {`<Picture src={require('../images/coffee6.jpg?sizes=375,860&jpeg[quality]=2&jpeg[webp][quality]=2')} loading='lazy' />`}\n        </Code>\n        <h3>Output</h3>\n        <Code language='html' style={syntax}>\n          {toString(\n            <Picture\n              src={require('../images/coffee6.jpg?sizes=375,860&jpeg[quality]=2&jpeg[webp][quality]=2')}\n              loading='lazy'\n            />,\n          )}\n        </Code>\n        <div className='photo'>\n          <div className='photo-inner'>\n            <Picture\n              src={require('../images/coffee6.jpg?sizes=375,860&jpeg[quality]=2&jpeg[webp][quality]=2')}\n              loading='lazy'\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <style jsx>{`\n      .toc {\n        padding: 24px;\n      }\n\n      .example {\n        padding: 20px;\n        border-bottom: 1px solid #dec79b40;\n      }\n\n      @media (min-width: 768px) {\n        .example {\n          padding: 40px;\n        }\n      }\n\n      .example-inner {\n        max-width: 980px;\n        margin: auto;\n      }\n\n      .photo {\n        background: rgb(35, 35, 35);\n        padding: 40px;\n      }\n\n      .photo-inner {\n        max-width: 860px;\n        margin: auto;\n      }\n\n      .example-1 .photo-inner {\n        max-width: 860px;\n      }\n\n      .example-2 .photo-inner {\n        max-width: 600px;\n      }\n\n      @media (min-width: 1180px) {\n        .example-2 .photo-inner {\n          max-width: 860px;\n        }\n      }\n\n      .example-3 .photo-inner {\n        max-width: 600px;\n      }\n\n      @media (min-width: 1180px) {\n        .example-3 .photo-inner {\n          max-width: 860px;\n        }\n      }\n\n      .example-5 .photo-inner {\n        max-width: 600px;\n      }\n\n      @media (min-width: 1180px) {\n        .example-5 .photo-inner {\n          max-width: 860px;\n        }\n      }\n    `}</style>\n  </Layout>\n)\n"],"mappings":";;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAKA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAKA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAasourceRoot":""}